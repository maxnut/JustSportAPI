swagger: '2.0'
info:
  title: JustSport API
  version: 1.0.0
basePath: /JustSportAPI
host: localhost:8080
schemes:
  - http
paths:
  /login:
    post:
      summary: Endpoint for user login
      description: Authenticate user by email and password.
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: User's email address
          required: false
          type: string
        - name: password
          in: formData
          description: User's password
          required: false
          type: string
      responses:
        '200':
          description: User successfully logged in
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: Login successful
              response_code:
                type: integer
                example: 200
        '400':
          description: Invalid request parameters
          schema:
              $ref: '#/definitions/Error'
        '452':
          description: Login failed
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: Wrong username or password.
              response_code:
                type: integer
                example: 452
  /register:
    post:
      summary: Endpoint for user registration
      description: Register a new user with email and password.
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: User's email address
          required: false
          type: string
        - name: password
          in: formData
          description: User's password
          required: false
          type: string
        - name: type
          in: formData
          description: User's type
          required: false
          type: string
          enum: [stu, doc, ama]
      responses:
        '200':
          description: User successfully registered
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: User registered.
              response_code:
                type: integer
                example: 200
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '452':
          description: User already exists
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: User with this email already exists.
              response_code:
                type: integer
                example: 452
        '453':
          description: The provided email is invalid
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: The provided email is invalid.
              response_code:
                type: integer
                example: 453
        '454':
          description: The provided type is invalid
          schema:
            type: object
            properties:
              response_message:
                type: string
                example: The provided type is invalid.
              response_code:
                type: integer
                example: 454
definitions:
  Error:
    type: object
    properties:
      response_message:
        type: string
        example: One or more fields are empty.
      response_code:
        type: integer
        example: 400